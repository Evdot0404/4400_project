#33
def WIN_vis_explore_event():
    db = DB()
    sql_command_33_1 = "select sitename from site"
    site_list = db.search(sql_command_33_1)
    sql_command_33_2 = "SELECT DISTINCT  `eventname`, `sitename`,  `price`,`Tickets Remaining`,  `Total Visits`,  `My Visits` FROM  `explore_event`"
    table_raw=db.search(sql_command_33_2)
    print(table_raw)
    window = Tk()
    window.title("Explore Event")
    window.geometry('600x600')
    window.resizable(0, 0)
    window.configure(background="#fff")

    def back():
        window.destroy()
        WIN_FUN_vis()


    def filter():
        print("sql_command_33_3")
        #print(e1at,e1bt,e2t,e3at,e3bt,e4at,e4bt,e4ct,e4dt)

    l0 = Label(window,text="Explore Event", width=36,font=('Arial', 18, 'bold'))
    l0.grid(sticky='n')

    l1 = Label(window,text="Name", font=('Times 14 normal'))
    l1.place(x=10,y=60)

    l2 = Label(window,text="Description Keyword", font=('Times 14 normal'))
    l2.place(x=230,y=60)

    l3 = Label(window,text="Site Name", font=('Times 14 normal'))
    l3.place(x=10,y=100)

    l4 = Label(window,text="Start Date", font=('Times', 14, 'normal'))
    l4.place(x=10,y=140)

    l5 = Label(window,text="End Date", font=('Times', 14, 'normal'))
    l5.place(x=300,y=140)   

    l5 = Label(window,text="Daily Visits Range", font=('Times', 14, 'normal'))
    l5.place(x=10,y=180)

    l6 = Label(window,text="--", font=('Times', 14, 'normal'))
    l6.place(x=200,y=180)

    l7 = Label(window,text="Ticket Price Range", font=('Times', 14, 'normal'))
    l7.place(x=270,y=180)

    l8 = Label(window,text="--", font=('Times', 14, 'normal'))
    l8.place(x=470,y=180)

    b3 = Button(window,text="Back", width=14, height=2,bg='pink',fg='grey',font=('Arial 9 bold'), command=(lambda: back()))
    b3.place(x=200,y=550)

    e1a_content= StringVar()
    e1a = Entry(window,width=10, bg='powder blue',textvariable = e1a_content)
    e1a.place(x=150,y=60)

    e1b_content= StringVar()
    e1b = Entry(window,width=10, bg='powder blue',textvariable = e1b_content)
    e1b.place(x=450,y=60) 

    e2_content= StringVar()
    e2 = Entry(window,width=20, bg='powder blue', textvariable = e2_content)
    e2.place(x=150,y=140) 

    e3a_content= StringVar()
    e3a = Entry(window,width=20, bg='powder blue',textvariable = e3a_content)
    e3a.place(x=150,y=140)

    e3b_content= StringVar()
    e3b = Entry(window,width=20, bg='powder blue', textvariable = e3b_content)
    e3b.place(x=400,y=140)

    e4a_content= StringVar()
    e4a = Entry(window,width=4, bg='powder blue', textvariable = e4a_content)
    e4a.place(x=160,y=180) 

    e4b_content= StringVar()
    e4b = Entry(window,width=4, bg='powder blue', textvariable = e4b_content)
    e4b.place(x=230,y=180)

    e4c_content= StringVar()
    e4c = Entry(window,width=4, bg='powder blue', textvariable = e4c_content)
    e4c.place(x=430,y=180)

    e4d_content= StringVar()
    e4d = Entry(window,width=4, bg='powder blue',textvariable = e4d_content)
    e4d.place(x=500,y=180)
         

    chVarDis = IntVar()
    c1 = Checkbutton(window, text='Include Visited',variable=chVarDis)
    if True:
        c1.select()
    else:
        c1.deselect()
    c1.place(x=150,y=220)

    chVarDis2 = IntVar()
    c1 = Checkbutton(window, text='Include Sold out event',variable=chVarDis2)
    if True:
        c1.select()
    else:
        c1.deselect()
    c1.place(x=350,y=220)

    option1 = StringVar()
    o1 = ttk.Combobox(window,width=20, textvariable=option1)
    o1['values'] = tuple(site_list)
    o1.place(x=130,y=100)
    o1.current(0)
    tree = ttk.Treeview(window)
    tree.place(x=0,y=300)
    vsb = ttk.Scrollbar(window, orient="vertical", command=tree.yview)
    vsb.place(x=550, y=250, height=250)
    tree["show"] = 'headings'
    tree.configure(yscrollcommand=vsb.set,height=12)

    
    

    e1a_text=e1a_content.get()
    e1b_text=e1b_content.get()
    e2_text=e2_content.get()
    e3a_text=e3a_content.get()
    e3b_text=e3b_content.get()
    e4a_text=e4a_content.get()
    e4b_text=e4b_content.get()
    e4c_text=e4c_content.get()
    e4d_text=e4d_content.get()
    print(e1a_text)

    def Event_Detail():
        window.destroy()
        WIN_vis_event_detail()

    b1 = Button(window,text="Filter", width=14, height=2,bg='pink',fg='grey',font=('Arial 9 bold'), command=(lambda:filter()))
    b1.place(x=50,y=250)

    b2 = Button(window,text="Event Detail", width=12, height=2,bg='pink',fg='grey',font=('Arial 9 bold'), command=(lambda: Event_Detail()))
    b2.place(x=375,y=250)

    tree["columns"]=("one","two","three","four","five","six")
    tree.column("one", width=100)
    tree.column("two", width=100)
    tree.column("three",width=100)
    tree.column("four",width=100)
    tree.column("five",width=100)
    tree.column("six",width=100)
    tree.heading("one", text="Event Name",command=(lambda: None))
    tree.heading("two", text="Site Name",command=(lambda: None))
    tree.heading("three", text="Ticket Price",command=(lambda: None))
    tree.heading("four",text="Ticket Remaining",command=(lambda: None))
    tree.heading("five",text="Total Visits",command=(lambda: None))
    tree.heading("six",text="My Visits",command=(lambda: None))
    for row in table_raw:
       tree.insert("",'end',values=(row[0],row[1],row[2],row[3],row[4],row[5]))
    
    window.mainloop() 
#34
#def WIN_vis_event_detail(Event_name,Event_Start_date,visitorusername):
def WIN_vis_event_detail():
    db = DB()
    #should we do db=DB for every function?
    visitor_username="mary.smith"   #to be commented ; below to be uncommented
    #visitor_username=visitorusername
    #input should always be string
    Event = "Private Bus Tour"  #comment this out
    #Event = Event_name  
    Start_Date = "2019-02-01" #comment this out
    #Startdate = Event_Start_date
    sql_command_34_3 = "SELECT DISTINCT `eventname`,`sitename`,`eventstartdate`,`enddate`,`price`,`description`,`Tickets Remaining`FROM `visitor_event_detail` WHERE `eventname` = '"+str(Event)+"'and `eventstartdate` = '"+str(Start_Date)+"'  "
    #print(sql_command_32_1)
    detail_list= db.search(sql_command_34_3)
    #print(detail_list)
    #print("23")            
    window = Tk()
    window.title("Visitor Event Detail ")
    window.geometry('500x600')
    window.resizable(0, 0)
    window.configure(background="#fff")


    Site=detail_list[0][1]
    End_Date=detail_list[0][3]
    Ticket_Price=detail_list[0][4]
    Tickets_Remaining=detail_list[0][6]
    Description= detail_list[0][5]

    def back():
        window.destroy()
        WIN_vis_explore_event()
            

    def log_visit():
        #print(e1_content.get())
        if not re.match(r'^[0-9]{4}-[0-9]{2}-[0-9]{2}$',e1_content.get()):
            tkinter.messagebox.showwarning('Date Error','Not valid date!')
        else:    
            e1_text=e1_content.get()
            #print(e1_text)
            sql_command_34_4="INSERT INTO `visit_event` SET `eventname`='"+str(Event)+"', `eventstartdate`='"+str(Start_Date)+"', `sitename`='"+str(Site)+"', `date`='"+str(e1_text)+"', `visitorusername`='"+str(visitor_username)+"'"
            db.insert(sql_command_34_4)

    l0 = Label(window,text="Visitor Event Detail", width=36,font=('Arial', 18, 'bold'))
    l0.grid(sticky='n')

    l1 = Label(window,text="Event", font=('Times 12 normal'))
    l1.place(x=10,y=50)

    l2 = Label(window,text=Event,font=('Times 10 italic bold'))
    l2.place(x=70,y=50)

    l3 = Label(window,text="Site",font=('Times 12 normal'))
    l3.place(x=250,y=50)   

    l4 = Label(window,text=Site,font=('Times 10 italic bold'))
    l4.place(x=300,y=50)   

    l5 = Label(window,text="Start Date",font=('Times 12 normal'))
    l5.place(x=10,y=80)

    l6 = Label(window,text=Start_Date,font=('Times 10 italic bold'))
    l6.place(x=100,y=80)

    l7 = Label(window,text="End Date",font=('Times 10 normal'))
    l7.place(x=250,y=80)  

    l8 = Label(window,text=End_Date,font=('Times 10 italic bold'))
    l8.place(x=350,y=80)

    l9 = Label(window,text="Ticket Price($)",font=('Times 12 normal'))
    l9.place(x=10,y=120)   

    l10 = Label(window,text=Ticket_Price,font=('Times 10 italic bold'))
    l10.place(x=140,y=120) 

    l11 = Label(window,text="Tickets Remaining",font=('Times 10 normal'))
    l11.place(x=250,y=120)

    l12 = Label(window,text=Tickets_Remaining,font=('Times 10 italic bold'))
    l12.place(x=380,y=120)      

    l13 = Label(window,text="Description",font=('Times 12 normal'))
    l13.place(x=10,y=200)

    st1 = scrolledtext.ScrolledText(window, width=40, height=10,wrap=WORD,bd=8,)
    st1.place(x=125,y=200)
    st1.insert(INSERT,Description)
    st1.config(state=DISABLED)

    l15 = Label(window,text="Visit Date",font=('Times 10 italic bold'))
    l15.place(x=10,y=500)

    b1 = Button(window,text="Log Visit", width=14, height=2,bg='pink',fg='grey',font=('Arial 9 bold'), command=(lambda: log_visit()))
    b1.place(x=300,y=500)

    e1_content = StringVar()
    e1 = Entry(window,width=20, bg='powder blue',textvariable=e1_content)
    e1.place(x=150,y=500) 

    b2 = Button(window,text="Back", width=14, height=2,bg='pink',fg='grey',font=('Arial 9 bold'), command=(lambda: back()))
    b2.place(x=200,y=550)

    window.mainloop() 

#35
def WIN_vis_explore_site():
    db=DB()

    def back():
        if man_profile[0] == 'user':
            window.destroy()
            WIN_FUN_user()
        elif man_profile[0] == 'adm':
            window.destroy() 
            WIN_FUN_adm()           
        elif man_profile[0] == 'admuser':
            window.destroy()
            WIN_FUN_adm_and_vis()
        elif man_profile[0] == 'man':
            window.destroy()
            WIN_FUN_man()
        elif man_profile[0] == 'manuser':
            window.destroy()
            WIN_FUN_man_and_vis()
        elif man_profile[0] == 'sta':
            window.destroy()
            WIN_FUN_sta()
        elif man_profile[0] == 'stauser':
            window.destroy()
            WIN_FUN_sta_and_vis()
        elif man_profile[0] == 'vis':
            window.destroy()
            WIN_FUN_vis()
        else: pass
    
    sql_command_35_1= "SELECT DISTINCT `sitename`, `openeveryday`, `eventstartdate`, `Event_count`,	`Total Visits`, `My Visits` FROM `explore_site`"
    sql_35_return= db.search(sql_command_35_1)
    
    print(sql_35_return)
    len_table=len(sql_35_return)
    #for i in range(0,len_table)
        

    window = Tk()
    window.title("Visitor Explore Site")
    window.geometry('600x600')
    window.resizable(0, 0)
    window.configure(background="#fff")

    l0 = Label(window,text="Visitor Explore Site", width=36,font=('Arial', 18, 'bold'))
    l0.grid(sticky='n')

    l1 = Label(window,text="Name", font=('Times 12 normal'))
    l1.place(x=10,y=50) 

    l2 = Label(window,text="Start Date", font=('Times 12 normal'))
    l2.place(x=10,y=80) 

    l3 = Label(window,text="End Date", font=('Times 12 normal'))
    l3.place(x=300,y=80) 

    l4 = Label(window,text="Daily Visits Range", font=('Times', 14, 'normal'))
    l4.place(x=10,y=120)

    l5 = Label(window,text="--", font=('Times', 14, 'normal'))
    l5.place(x=200,y=120)

    l6 = Label(window,text="Ticket Price Range", font=('Times', 14, 'normal'))
    l6.place(x=270,y=120)

    l7 = Label(window,text="--", font=('Times', 14, 'normal'))
    l7.place(x=470,y=120)              

    b1 = Button(window,text="Filter", width=16, height=2,bg='pink',fg='grey',font=('Arial 9 bold'), command=(lambda: None))
    b1.place(x=20,y=200)

    b2 = Button(window,text="Site Detail", width=14, height=2,bg='pink',fg='grey',font=('Arial 9 bold'), command=(lambda: None))
    b2.place(x=300,y=200)

    b3 = Button(window,text="Transit Detail", width=14, height=2,bg='pink',fg='grey',font=('Arial 9 bold'), command=(lambda: None))
    b3.place(x=450,y=200)

    b4 = Button(window,text="Back", width=14, height=2,bg='pink',fg='grey',font=('Arial 9 bold'), command=(lambda: back()))
    b4.place(x=250,y=550)

    e1a = Entry(window,width=4, bg='powder blue')
    e1a.place(x=160,y=120)

    e1b = Entry(window,width=4, bg='powder blue')
    e1b.place(x=230,y=120)    

    e2a = Entry(window,width=4, bg='powder blue')
    e2a.place(x=430,y=120)

    e2b = Entry(window,width=4, bg='powder blue')
    e2b.place(x=500,y=120)

    e3a = Entry(window,width=4, bg='powder blue')
    e3a.place(x=100,y=80)

    e3b = Entry(window,width=10, bg='powder blue')
    e3b.place(x=400,y=80)

    option1 = StringVar()
    o1 = ttk.Combobox(window,width=20, textvariable=option1)
    o1['values'] = ('--ALL--','Site1','Site2','Site3') # More states should be involved
    o1.place(x=60,y=50)
    o1.current(0)    

    option2 = StringVar()
    o2 = ttk.Combobox(window,width=8, textvariable=option2)
    o2['values'] = ('Yes','No') # This step can be hardcoded
    o2.place(x=400,y=50)
    o2.current(0)
    
    tree = ttk.Treeview(window)
    tree.place(x=50,y=250)
    vsb = ttk.Scrollbar(window, orient="vertical", command=tree.yview)
    vsb.place(x=500, y=250, height=300)
    tree["show"] = 'headings'
    tree.configure(yscrollcommand=vsb.set,height=12)
    tree["columns"]=("one","two","three","four")
    tree.column("one", width=100)
    tree.column("two", width=100)
    tree.column("three",width=100)
    tree.column("four",width=100)
    tree.heading("one", text="Sitename",command=(lambda: None))
    tree.heading("two", text="Event Count",command=(lambda: None))
    tree.heading("three", text="Total Visits",command=(lambda: None))
    tree.heading("four",text="My Visits",command=(lambda: None))

    for row in sql_35_return:
        tree.insert("",'end',values=(row[0],row[1],row[2],row[3],row[4],row[5]))
    chVarDis = IntVar()
    c1 = Checkbutton(window, text='Include Visited',variable=chVarDis)
    if True:
        c1.select()
    else:
        c1.deselect()
    c1.place(x=190,y=160)
    window.mainloop()

#36
#def WIN_vis_transit_detail(sitename,visitorusername):
def WIN_vis_transit_detail():
    db=DB()

    def back():
        window.destroy()
        WIN_vis_explore_site()
        
    
    def log_visit():
        #print(e1_content.get())
        if not re.match(r'^[0-9]{4}-[0-9]{2}-[0-9]{2}$',e1_content.get()):
            tkinter.messagebox.showwarning('Date Error','Not valid date!')
        else:    
            e1_text=e1_content.get()
            #print(e1_text)
            sql_command_34_4="INSERT INTO `take` SET `transitroute`='Blue', `transittype`='MARTA', `date`='2019-02-02', `username`='"+str(visitor)+"';"
            db.insert(sql_command_34_4)

            

    Site="Inman Park" #to be commented uncomment the below line
    #Site = sitename
    visitor_username="mary.smith" #to be commented uncomment the below line
    #visitor_username=visitorusername

    sql_command_36_1= "SELECT DISTINCT `type`, `route`, `price`, `Connected Sites` FROM	`transit_detail` WHERE sitename = '"+Site+"';"
    view_36=db.search(sql_command_36_1)
    print(view_36)
    window = Tk()
    window.title("Visitor Transit Detail")
    window.geometry('600x600')
    window.resizable(0, 0)
    window.configure(background="#fff")

 
    l0 = Label(window,text="Transit Detail", width=36,font=('Arial', 18, 'bold'))
    l0.grid(sticky='n')

    l1 = Label(window,text="Site", font=('Times 12 normal'))
    l1.place(x=10,y=50)

    l2 = Label(window,text=Site, font=('Times 12 italic'))
    l2.place(x=90,y=50)

    l3 = Label(window,text="Transport Type", font=('Times 12 italic'))
    l3.place(x=300,y=50)    

    l4 = Label(window,text="Transit Date", font=('Times 12 italic'))
    l4.place(x=150,y=550)      

    b1 = Button(window,text="Back", width=10, height=2,bg='pink',fg='grey',font=('Arial 9 bold'), command=(lambda: back()))
    b1.place(x=10,y=550)

    b2 = Button(window,text="Log Visit", width=14, height=2,bg='pink',fg='grey',font=('Arial 9 bold'), command=(lambda: log_visit()))
    b2.place(x=450,y=550)

    e1_content=StringVar()
    e1 = Entry(window,width=20, bg='powder blue',textvariable= e1_content)
    e1.place(x=250,y=550)
    e1_text=e1_content.get()
    
    option1 = StringVar()
    o1 = ttk.Combobox(window,width=8, textvariable=option1)
    o1['values'] = ('MARTA','Bus','Bike')
    o1.place(x=440,y=50)
    o1.current(0)
    
    tree = ttk.Treeview(window)
    tree.place(x=50,y=250)
    vsb = ttk.Scrollbar(window, orient="vertical", command=tree.yview)
    vsb.place(x=550, y=250, height=240)
    tree["show"] = 'headings'
    tree.configure(yscrollcommand=vsb.set,height=12)
    tree["columns"]=("one","two","three","four")
    tree.column("one", width=100)
    tree.column("two", width=100)
    tree.column("three",width=100)
    tree.column("four",width=100)
    tree.heading("one", text="Route",command=(lambda: None))
    tree.heading("two", text="Transport Type",command=(lambda: None))
    tree.heading("three", text="Price",command=(lambda: None))
    tree.heading("four",text="# Connected Sites",command=(lambda: None))

    for row in view_36:
        tree.insert("",'end',values=(row[0],row[1],row[2],row[3]))

    window.mainloop() 


#37
#def WIN_vis_site_detail(sitename,visitorusername):
def WIN_vis_site_detail():
    visitor_username="maria.rodriguez" #comment this out
    Site="Inman Park" #comment this out 
    #Site="sitename"
    Open_Everyday ="Yes"
    #visitor_username=visitorusername


    Address = "Inman Park, Atlanta, GA 30307"
    db=DB()

    def back():
        if man_profile[0] == 'user':
            window.destroy()
            WIN_FUN_user()
        elif man_profile[0] == 'adm':
            window.destroy() 
            WIN_FUN_adm()           
        elif man_profile[0] == 'admuser':
            window.destroy()
            WIN_FUN_adm_and_vis()
        elif man_profile[0] == 'man':
            window.destroy()
            WIN_FUN_man()
        elif man_profile[0] == 'manuser':
            window.destroy()
            WIN_FUN_man_and_vis()
        elif man_profile[0] == 'sta':
            window.destroy()
            WIN_FUN_sta()
        elif man_profile[0] == 'stauser':
            window.destroy()
            WIN_FUN_sta_and_vis()
        elif man_profile[0] == 'vis':
            window.destroy()
            WIN_FUN_vis()
        else: pass

    def log_visit(visitor_username):
        if not re.match(r'^[0-9]{4}-[0-9]{2}-[0-9]{2}$',e1_content.get()):
            tkinter.messagebox.showwarning('Date Error','Not valid date!')
        else:
            e1_text=e1_content.get()
            #print(e1_text)
            sql_command_37_2="INSERT INTO `visit_site` SET `sitename`='"+str(Site)+"', `date`='"+str(e1_text)+"', `visitorusername`='"+str(visitor_username)+"';"
            db.insert(sql_command_37_2)




    sql_command_37_1="SELECT DISTINCT `sitename`, `openeveryday`, `address` FROM `site_detail` WHERE `sitename` ='"+Site+"'"
    view_37=db.search(sql_command_37_1)
    print(view_37)

    if view_37[0][1] == 1:
        Open_Everyday = "Yes"
    else:
        Open_Everyday = "No"
    Address = view_37[0][2]

    
    
    window = Tk()
    window.title("Visitor Site Detail")
    window.geometry('600x300')
    window.resizable(0, 0)
    window.configure(background="#fff")

    l0 = Label(window,text="Site Detail", width=36,font=('Arial', 18, 'bold'))
    l0.grid(sticky='n')

    l1 = Label(window,text="Site", font=('Times 12 normal'))
    l1.place(x=10,y=50)

    l2 = Label(window,text=Site, font=('Times 12 italic'))
    l2.place(x=90,y=50)    

    l3 = Label(window,text="Open Everyday", font=('Times 12 normal'))
    l3.place(x=250,y=50)

    l4 = Label(window,text=Open_Everyday, font=('Times 12 italic'))
    l4.place(x=400,y=50)

    l5 = Label(window,text="Address", font=('Times 12 normal'))
    l5.place(x=10,y=100)

    l6 = Label(window,text=Address, font=('Times 12 italic'))
    l6.place(x=100,y=100) 

    l7 = Label(window,text="Visit Date", font=('Times 12 normal'))
    l7.place(x=100,y=180)       

    b1 = Button(window,text="Back", width=10, height=2,bg='pink',fg='grey',font=('Arial 9 bold'), command=(lambda: back()))
    b1.place(x=300,y=225)

    e1_content= StringVar()
    e1 = Entry(window,width=20, bg='powder blue', textvariable=e1_content)
    e1.place(x=250,y=180)


    b2 = Button(window,text="Log Visit", width=14, height=2,bg='pink',fg='grey',font=('Arial 9 bold'), command=(lambda:log_visit(visitor_username)))
    b2.place(x=450,y=180)   
    

    window.mainloop() 
#38
def WIN_vis_visit_his():
    db=DB()

    def back():
        if man_profile[0] == 'user':
            window.destroy()
            WIN_FUN_user()
        elif man_profile[0] == 'adm':
            window.destroy() 
            WIN_FUN_adm()           
        elif man_profile[0] == 'admuser':
            window.destroy()
            WIN_FUN_adm_and_vis()
        elif man_profile[0] == 'man':
            window.destroy()
            WIN_FUN_man()
        elif man_profile[0] == 'manuser':
            window.destroy()
            WIN_FUN_man_and_vis()
        elif man_profile[0] == 'sta':
            window.destroy()
            WIN_FUN_sta()
        elif man_profile[0] == 'stauser':
            window.destroy()
            WIN_FUN_sta_and_vis()
        elif man_profile[0] == 'vis':
            window.destroy()
            WIN_FUN_vis()
        else: pass

    sql_command_38_1="SELECT DISTINCT `date`,`eventname`,`sitename`,`price` FROM `visit_history`;"
    view_38=db.search(sql_command_38_1)

    def Filter():
        #print("here")
        option1_text = option1.get()
        e1_text= e1_content.get()
        e2_text= e2_content.get()
        e3_text= e3_content.get()
        sql_command_38_2="SELECT DISTINCT `date`,`eventname`,`sitename`,`price`FROM `visit_history WHERE `eventname` like '%"+str()+"%' AND " 



    window = Tk()
    window.title("Visitor Visit History")
    window.geometry('600x600')
    window.resizable(0, 0)
    window.configure(background="#fff")

    l0 = Label(window,text="Visit History", width=36,font=('Arial', 18, 'bold'))
    l0.grid(sticky='n')

    l1 = Label(window,text="Event", font=('Times', 14, 'normal'))
    l1.place(x=10,y=60)

    l2 = Label(window,text="Site", font=('Times', 14, 'normal'))
    l2.place(x=250,y=60)

    l3 = Label(window,text="Start Date", font=('Times', 14, 'normal'))
    l3.place(x=10,y=100)

    l5 = Label(window,text="End Date", font=('Times', 14, 'normal'))
    l5.place(x=300,y=100)    

    b1 = Button(window,text="Filter", width=16, height=2,bg='pink',fg='grey',font=('Arial 9 bold'), command=(lambda: Filter()))
    b1.place(x=200,y=150)

    b2 = Button(window,text="Back", width=16, height=2,bg='pink',fg='grey',font=('Arial 9 bold'), command=(lambda: back()))
    b2.place(x=200,y=450)

    e1_content = StringVar()
    e1 = Entry(window,width=20, bg='powder blue',textvariable='e1_content')
    e1.place(x=100,y=60)

    e2_content = StringVar()
    e2 = Entry(window,width=10, bg='powder blue',textvariable='e2_content')
    e2.place(x=125,y=100)

    e3_content = StringVar()
    e3 = Entry(window,width=10, bg='powder blue',textvariable='e3_content')
    e3.place(x=400,y=100)
    
    option1 = StringVar()
    o1 = ttk.Combobox(window,width=8, textvariable=option1)
    o1['values'] = ('ALL','MARTA','Bus','Bike')
    o1.place(x=300,y=50)
    o1.current(0)
    

    tree = ttk.Treeview(window)
    tree.place(x=50,y=250)
    vsb = ttk.Scrollbar(window, orient="vertical", command=tree.yview)
    vsb.place(x=550, y=250, height=240)
    tree["show"] = 'headings'
    tree.configure(yscrollcommand=vsb.set,height=12)
    tree["columns"]=("one","two","three","four")
    tree.column("one", width=100)
    tree.column("two", width=100)
    tree.column("three",width=100)
    tree.column("four",width=100)
    tree.heading("one", text="Route",command=(lambda: None))
    tree.heading("two", text="Transport Type",command=(lambda: None))
    tree.heading("three", text="Price",command=(lambda: None))
    tree.heading("four",text="# Connected Sites",command=(lambda: None))

    for row in view_38:
        tree.insert("",'end',values=(row[0],row[1],row[2],row[3]))

    window.mainloop()
