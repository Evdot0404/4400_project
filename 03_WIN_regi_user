def WIN_regi_user():
    db = DB()
    geometry = '600x' + str(len(newemail)*40+300)

    window = Tk()
    window.title("Register User")
    window.geometry(geometry)
    window.resizable(0, 0)
    window.configure(background="#fff")

    def confirmpwd():
        if len(e3_content.get()) < 8 :
            tkinter.messagebox.showwarning('Password Error','Password should at least 8 characters')  
        elif e3_content.get() != e5_content.get():
            tkinter.messagebox.showwarning('Not same password','Incorrect confirmed password, try again!')
        else:return e3_content.get()

    def checkusername():
        command = 'SELECT username FROM user'
        usernames_tmp = db.search(command)
        usernames = []
        for user in usernames_tmp:
            usernames.append(user[0])
        if e2_content.get() in usernames:
            tkinter.messagebox.showwarning('Existed Username','The username exists, try another username!')
        else:return e2_content.get()

    def checkemail():
        command = 'SELECT email FROM email'
        emails_tmp = db.search(command)
        emails = []
        for email in emails_tmp:
            emails.append(email[0])
        if not re.match(r'^[0-9a-zA-Z]+@{1}[0-9a-zA-Z]+\.{1}[0-9a-zA-Z]+',e6_content.get()):
            tkinter.messagebox.showwarning('Email Error','Not valid email!')
        elif e6_content.get() in emails:
            tkinter.messagebox.showwarning('Existed Email','The email exists, try another email!')
        else:
            newemail.append(e6_content.get())
    
    def register_checks():
        if e1_content.get() == '':
            tkinter.messagebox.showwarning('First Name Error','First Name should not be none')
        if e4_content.get() == '':
            tkinter.messagebox.showwarning('Last Name Error','Last Name should not be none')
        if e2_content.get() == '':
            tkinter.messagebox.showwarning('Username Error','Username should not be none')  
        if len(newemail) == 0:
            tkinter.messagebox.showwarning('Email Error','Email should not be none')  
        fname = "fname='" + e1_content.get() + "'"
        lname = "lname='" + e4_content.get() + "'"
        password_tmp = confirmpwd()
        username_tmp = checkusername()
        if None not in (fname,lname,password_tmp,username_tmp) and newemail != []:
            password = "password='" + password_tmp + "'"
            username = "username='" + username_tmp + "'"
            etype = "etype='User'"
            command = "INSERT INTO user SET status='Pending'," + username + "," + password + "," + fname + "," + lname + "," + etype
            db.insert(command)
            window.destroy()
            WIN_user_login()

    def addemail():
        checkemail()
        window.destroy()
        WIN_regi_user()

    def removeemail(email):
        newemail.remove(email)
        window.destroy()
        WIN_regi_user()

    def back():
        window.destroy()
        newemail.clear()
        WIN_regi_nav()

    l0 = Label(window,text="Register User", width=36,font=('Arial', 18, 'bold'))
    l0.place(x=100,y=0)

    l1 = Label(window,text="Fisrt Name", font=('Times 14 normal'))
    l1.place(x=25,y=60)
    
    l2 = Label(window,text="Username", font=('Times 14 normal'))
    l2.place(x=25,y=100)

    l3 = Label(window,text="Password", font=('Times 14 normal'))
    l3.place(x=25,y=140)

    l4 = Label(window,text="Last Name", font=('Times 14 normal'))
    l4.place(x=275,y=60)
    
    l5 = Label(window,text="Confirm Password",font=('Times 14 normal'))
    l5.place(x=275,y=140)

    l6 = Label(window,text="Email", font=('Times 14 normal'))
    l6.place(x=25,y=180)

    labelname = {}
    buttonname = {}
    for email in newemail:
        i = newemail.index(email)
        labelname[email] = Label(window,text=newemail[i], font=('Times 12 normal'))
        labelname[email].place(x=120,y=180 + i*40) 
        buttonname[email] = Button(window,text="Remove", width=6, height=2,bg='pink',fg='grey',font=('Arial 9 bold'), command=(lambda: removeemail(email)))  
        buttonname[email].place(x=400,y=180 + i*40)   

    e1_content = StringVar()
    e1 = Entry(window,width=14, bg='powder blue',textvariable=e1_content)
    e1.focus()
    e1.place(x=120,y=60)

    e2_content = StringVar()
    e2 = Entry(window,width=14, bg='powder blue',textvariable=e2_content)
    e2.place(x=120,y=100)

    e3_content = StringVar()
    e3 = Entry(window,width=14, bg='powder blue',textvariable=e3_content,show='*')
    e3.place(x=120,y=140)

    e4_content = StringVar()
    e4 = Entry(window,width=14, bg='powder blue',textvariable=e4_content)
    e4.place(x=400,y=60)

    e5_content = StringVar()
    e5 = Entry(window,width=14, bg='powder blue',textvariable=e5_content,show='*')
    e5.place(x=400,y=140)

    e6y = len(newemail)*40 + 180

    e6_content = StringVar()
    e6 = Entry(window,width=20, bg='powder blue',textvariable=e6_content)
    e6.place(x=120,y=e6y)

    b3 = Button(window,text="Back", width=16, height=2,bg='pink',fg='grey',font=('Arial 9 bold'), command=(lambda: back()))
    b3.place(x=175,y=250+len(newemail)*40)

    b4 = Button(window,text="Register", width=16, height=2,bg='pink',fg='grey',font=('Arial 9 bold'), command=(lambda:register_checks()))
    b4.place(x=325,y=250+len(newemail)*40)

    b6add = Button(window,text="Add", width=6, height=2,bg='pink',fg='grey',font=('Arial 9 bold'), command=(lambda: addemail()))
    b6add.place(x=400,y=e6y)

    window.mainloop()
